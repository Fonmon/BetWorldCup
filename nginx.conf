worker_processes auto;

events {
    worker_connections 512;
}

http {

    server_tokens off;

    # config to don't allow the browser to render the page inside an frame or iframe
    # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
    # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
    # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
    add_header X-Frame-Options SAMEORIGIN;

    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
    # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
    # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
    add_header X-Content-Type-Options nosniff;

    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
    # this particular website if it was disabled by the user.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    add_header X-XSS-Protection "1; mode=block";

    include mime.types;

    # Avoid situations where a hostname is too long when dealing with vhosts.
    server_names_hash_bucket_size 64;
    server_names_hash_max_size 512;

    # Performance optimizations.
    sendfile on;
    tcp_nopush on;

    # http://nginx.org/en/docs/hash.html
    types_hash_max_size 2048;

    gzip on;
    
    server{
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name localhost;

        location / {
            proxy_pass http://betworldcup_app:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        # return 301 https://$host$request_uri;
    }

    # server{
    #     listen 443;
    #     ssl on;
    #     server_name $HOST_API_URL;

    #     ssl_certificate /etc/nginx/certs/api/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/certs/api/privkey.pem;

    #     location / {
    #         proxy_pass http://betworldcup_app:8080;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     }
    # }
}